---
name: CI/CD Pipeline

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]
  schedule:
    # Run security scans weekly
    - cron: '0 0 * * 0'

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-core.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-core.txt

      - name: Run Pylint
        run: |
          # Exclude macOS-specific files on Linux runners
          pylint --fail-under=10.0 $(git ls-files '*.py' | grep -v -E '(httpcheck_menubar|macos_notifications|test_menubar)\.py$')

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/Library/Caches/pip
            ~\AppData\Local\pip\Cache
          key: >-
            ${{ runner.os }}-pip-${{ matrix.python-version }}-${{
            hashFiles('**/requirements-core.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-core.txt

      - name: Run basic smoke test
        run: |
          python httpcheck.py --version
          python httpcheck.py --help

  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-security-${{ hashFiles('**/requirements-core.txt') }}
          restore-keys: |
            ${{ runner.os }}-security-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-core.txt
          pip install safety bandit semgrep

      - name: Run Safety security check
        run: |
          safety check --json --continue-on-error || echo "Safety check completed with warnings"
        continue-on-error: true

      - name: Run Bandit security linter
        run: |
          bandit -r . -ll --skip B101,B601,B602,B603,B604,B605,B606,B607 -f json -o bandit-report.json || echo "Bandit completed with warnings"
        continue-on-error: true

      - name: Run Semgrep
        uses: semgrep/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/python
            p/owasp-top-ten
        continue-on-error: true

  dependency-check:
    name: Dependency License Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-licenses-${{ hashFiles('**/requirements-core.txt') }}
          restore-keys: |
            ${{ runner.os }}-licenses-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-core.txt
          pip install pip-licenses

      - name: Check dependency licenses
        run: |
          pip-licenses --with-authors --with-urls \
            --format=markdown > licenses.md
          echo "## Dependency Licenses" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat licenses.md >> $GITHUB_STEP_SUMMARY

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: +security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
